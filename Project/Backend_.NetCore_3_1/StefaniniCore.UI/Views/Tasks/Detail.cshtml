@{
    ViewData["Title"] = "Cadastro de Funcionalidades";
}

@model StefaniniCore.Application.ViewModels.TaskDetailViewModel

<ol class="breadcrumb">
    <li><a href="/">Home</a> /</li>
    <li>@Html.ActionLink("Funcionalidades", "List", "Tasks") /</li>
    <li class="active"> Cadastro</li>
</ol>

<div>
    <h2>Cadastro de Funcionalidades</h2>
    <label class="requiredFields">*</label> Campos obrigatórios.
</div>

<div>
    <form id="formTask">
        @Html.HiddenFor(f => f.Task.Id, new { @id = "hddTaskId", @name = "hddTaskId" })
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label>Nome da Funcionalidade<i class="requiredField">*</i>:</label>
                    @Html.TextBoxFor(f => f.Task.Name, new { @id = "txtName", @name = "txtName", @class = "form-control", @type = "text", @maxlength = "30" })
                </div>

                <div class="form-group">
                    <label>Descrição:</label>
                    <textarea class="form-control" id="txtDescription" name="txtDescription" maxlength="150" rows="3">@Model?.Task?.Description</textarea>
                </div>
            </div>
        </div>

        <div class="row">

            <div class="text-center">
                <button type="button" id="btnSave" name="btnSave" class="btn btn-primary">Salvar</button>
                <button type="button" id="btnClear" name="btnClear" class="btn btn-default">Limpar</button>
                <a href="@Url.Action("List", "Tasks")" class=" btn btn-default">Voltar</a>
            </div>
        </div>
    </form>
</div>

@section scripts {
    <script>
        var URL_SAVE_TASK = '@Url.Action("Save", "Tasks")';
    </script>

    <script src="~/js/my-scripts/tasks/detail.js"></script>
}
